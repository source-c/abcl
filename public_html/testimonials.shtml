<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title><!--#include virtual="project-name" -->: Testimonials</title>
  <link rel="stylesheet" type="text/css" href="style.css"/>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"/>
  <style>
dt { margin-top: 1cm;
     font-weight: bold;
     font-family: sans-serif;
     font-size: 105%; }
dd { margin-top: 0.3cm;
    // font-family: sans-serif;
     font-size: 90% }
  </style>
</head>

<body>
 <div class="header">
   <h1><!--#include virtual="project-name" --></h1>
 </div>

<!--#include virtual="left-menu" -->

<div style="float:left;width:80ex;margin-top:1cm">

<h1>Testimonials</h1>

<dl>
<dt>David Kirkman (Astronomer at University of California, San Diego)
  - June 7, 2010</dt>
<dd>
"I've been using ABCL to help position the Keck telescope on targets
that are too faint to see with the slit guider.  I used code I
created in 1994 - in Lisp - for the exact calculations and combined it
with Java libraries for getting images in and displaying things. The
Lisp code ran unmodified. And what's more: I can run it all on my
Windows laptop!<br /> <br />
The original project went so well that I stared to do new work in Lisp again."
</dd>

<dt>Brad Garton (Columbia University Computer Music Center)
</dt>
<dd>
"I used ABCL (older, v. 0.0.10) as the interpreter
underlying an object for a music/media graphical programming
environment called <a href="http://www.cycling74.com/products/max5">Max/MSP</a>.
ABCL allowed me to embed an entire LISP interpreter inside the
Max/MSP package, and it has worked extremely well.  Max/MSP
is designed primarily for real-time/interactive applications,
used a lot by computer music academics, DJs/VJs, bizarro jazz
performers, audio plugin developers, etc.  With the embedded
abcl object, I am able to schedule LISP functions and work
interactively with complex processes -- <b>the abcl interpreter
has been rock-solid!</b> <br />
<br />
The source for the object is here (scroll down to the bottom of
the page):<br />
<br />
       <a style="align:center" href="http://music.columbia.edu/~brad/maxlispj/">http://music.columbia.edu/~brad/maxlispj/</a><br />
<br />
And I also used it extensively in a large application built with
Max/MSP... it's an interactive 'book' where the generative music
follows what a reader is reading and creates an appropriate sound
setting for the text:<br />
<br />
       <a style="align:center" href="http://music.columbia.edu/~brad/BookOfDreams/">http://music.columbia.edu/~brad/BookOfDreams/</a><br />
<br />
The music performance model underlying the shawm-like melodies
is all coded using abcl.<br />
<br />
So to all of you who have contributed (and still contribute!) to
the development of this terrific package, a big THANK YOU!!!"
</dt>

<dt>Alessio Stalla - November, 2010
</dt>
<dd>With my Java background and my love for Lisp, I've found ABCL to be the ideal choice for my open source projects, in particular:
<ul>
  <li>DynaSpring (<a href="http://code.google.com/p/dynaspring/">http://code.google.com/p/dynaspring/</a>), a Lisp-based DSL for the Spring framework: it replaces the ugly-ugly XML with our beloved parentheses, bringing new features to Spring (conditional evaluation, modularity constructs, etc.) and making it much more user-extensible;</li>
  <li>Snow (<a href="http://common-lisp.net/project/snow/">http://common-lisp.net/project/snow/</a>), a declarative GUI language in the vein of XUL, but obviously Lisp-based, targeting Swing. While still lacking many things, it combines a Lisp DSL with existing Java libraries to concisely describe the structure and layout of the GUI, and to make it easy to connect the UI with the application, thanks to its integration with Cells;</li>
  <li>and all the other experimental, unreleased stuff I do as a hobby (mainly related to web development and enterprise application development).</li>
</ul>
For me ABCL's selling point is of course its interoperability with Java and the consequent access to Java libraries, but I also appreciate its simplicity, portability (even FASLs are cross-platform, thanks to the JVM), and last but not least, the small but vibrant and helpful community.
</dd>

<dt>Hunter Monroe
</dt>
<dd>"Maxima algebraic computation software compiles with ABCL. The test suite
runs fairly quickly on Windows XP and, after work by Robert Dodier, 86
percent of the test suite is passed successfully, although some individual
tests crash the suite. If you want to compile Maxima with ABCL lisp, check
out the Maxima source code and following the instructions in INSTALL.lisp."
</dd>

<dt>Ted Kosan
</dt>
<dd>I am in the process of integrating ABCL with <a href="http://mathrider.org">MathRider</a> in preparation for when Maxima is able to run on it.
</dd>


</dl>
</div>
</body>
</html>
